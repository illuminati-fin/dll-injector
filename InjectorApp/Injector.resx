<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>